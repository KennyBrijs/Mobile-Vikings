// Generated by CoffeeScript 1.3.3
(function() {
  var Map, getCurrentPositionHandler, isValidEmail, map, scrollTo, showEmailError;

  map = null;

  $(function() {
    if (localStorage.email != null) {
      $("input#email").val(localStorage.email);
    }
    $('[href^="#"]').click(scrollTo);
    map = new Map();
    map.createMap();
    if (navigator.geolocation != null) {
      return navigator.geolocation.getCurrentPosition(getCurrentPositionHandler);
    }
  });

  getCurrentPositionHandler = function(position) {
    map.addMarker(position.coords.latitude, position.coords.longitude);
    return map.fitBound([position.coords.latitude, position.coords.longitude]);
  };

  Map = (function() {

    function Map() {}

    Map.prototype.map = null;

    Map.prototype.latitude = 50.94958;

    Map.prototype.longitude = 5.34657;

    Map.prototype.zoom = 10;

    Map.prototype.createMap = function() {
      this.map = L.map('map', {
        scrollWheelZoom: false
      }).setView([this.latitude, this.longitude], this.zoom);
      L.tileLayer('http://{s}.tile.cloudmade.com/744d221a8986462c8970d7087063bd59/997/256/{z}/{x}/{y}.png', {
        attribution: 'Map &copy Cloudmade'
      }).addTo(this.map);
      return this.addMarker(this.latitude, this.longitude, "<b>Viking Basis</b><br />Come and say hi!");
    };

    Map.prototype.addMarker = function(longitude, latitude, message) {
      var marker;
      marker = L.marker([longitude, latitude]).addTo(this.map);
      if (message != null) {
        return marker.bindPopup(message).openPopup();
      }
    };

    Map.prototype.fitBound = function(bound) {
      return this.map.fitBounds([[this.latitude, this.longitude], bound]);
    };

    return Map;

  })();

  scrollTo = function() {
    var destination, elementClicked;
    elementClicked = $(this).attr("href");
    destination = $(elementClicked).offset().top;
    $("html:not(:animated),body:not(:animated)").animate({
      scrollTop: destination - 20
    }, 500);
    return false;
  };

  isValidEmail = function(email) {
    var emailPattern;
    emailPattern = /^([\w.-]+)@([\w.-]+)\.([a-zA-Z.]{2,6})$/i;
    if (email.match(emailPattern)) {
      return true;
    } else {
      return false;
    }
  };

  showEmailError = function(message) {
    $('label[for="email"]').append('<small class="invalid" style="display: none">' + message + '</small>');
    return $('small.invalid').slideDown('slow', function() {
      return $('label[for="email"]').css('animation', 'shake 1s');
    });
  };

  window.processNewsletterForm = function(form) {
    var email, noErrorMessage;
    email = form.elements['email'].value;
    if (isValidEmail(email)) {
      if (typeof Storage !== "undefined" && Storage !== null) {
        localStorage.email = email;
      }
      return true;
    } else {
      if ($('label[for="email"] small.invalid').length === 0) {
        noErrorMessage = true;
      }
      if (noErrorMessage) {
        showEmailError("Dit email adres is niet geldig");
      }
      return false;
    }
  };

}).call(this);
